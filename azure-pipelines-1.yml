trigger: none
pr: none

# For newer Azure DevOps versions
resources:
  containers:
    - container: frontend
      image: dersimabbas.azurecr.io/frontend:latest
      type: ACR
      azureSubscription: 'azurerm'
      resourceGroup: 'rg-dersimabbas'
      registry: 'dersimabbas'
      repository: 'frontend'
      trigger: 
        enabled: true
        tags:
          include:
          - latest
    
    - container: backend
      image: dersimabbas.azurecr.io/backend:latest
      type: ACR
      azureSubscription: 'azurerm'
      resourceGroup: 'rg-dersimabbas'
      registry: 'dersimabbas'
      repository: 'backend'
      trigger: 
        enabled: true
        tags:
          include:
          - latest



pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'azurerm'
  containerRegistry: 'dersimabbas.azurecr.io'
  storageAccountName: 'dersimdockercompose'
  storageContainerName: 'compose'

stages:
- stage: GenerateAndStore
  displayName: 'generate and store docker compose file'
  jobs:
  - job: CreateComposeFile
    displayName: 'create docker compose file'
    steps:
    - task: Bash@3
      displayName: 'Generate docker compose file'
      inputs:
        targetType: 'inline'
        script: |
          cat > docker-compose.yml << EOF
          version: '3'
          services:
            backend:
              image: dersimabbas.azurecr.io/backend:latest
              ports:
              - "5000:80"
              networks:
                - app-network
            frontend:
              image: dersimabbas.azurecr.io/frontend:latest
              ports:
              - "80:80"
              depends_on:
                - backend
              network:
                - app-network
              
          networks:
            app-network:
              driver: bridge
          EOF

          cat docker-compose.yml
    
    - task: AzureCLI@2
      displayName: 'upload to storage account'
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az storage container create --name $(storageContainerName) --account-name $(storageAccountName) --auth-mode login

          az storage blob upload --container-name $(storageContainerName) --file docker-compose.yml --name docker-compose.yml --account-name $(storageAccountName) --auth-mode login --overwrite